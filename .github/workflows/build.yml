name: An√°lisis CI con SonarCloud y Deploy (CD) S3 

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: üì• Descargar el c√≥digo del repositorio
        uses: actions/checkout@v3  # ‚úÖ Versi√≥n actualizada
        with:
          fetch-depth: 0

      - name: üîß Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ Instalar dependencias
        run: npm ci  # üîê Instalaci√≥n segura con package-lock.json

      - name: üõ†Ô∏è Dar permisos a Karma
        run: chmod +x node_modules/.bin/karma

      - name: üß™ Ejecutar pruebas con Karma y Jasmine - generaci√≥n de coverage
        run: |
          npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless  # üìä Genera reporte de cobertura

      - name: üîç Escanear c√≥digo con SonarCloud
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

      - name: üìÇ Verificar si se gener√≥ lcov.info
        run: ls -l coverage/lcov.info || echo "‚ùå lcov.info no encontrado"

      - name: üõë Verificar resultado de SonarCloud
        run: |
          SONAR_PROJECT_KEY=${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
          SONAR_URL="https://sonarcloud.io/api/qualitygates/project_status?projectKey=${SONAR_PROJECT_KEY}"

          echo "‚åõ Esperando a que el an√°lisis de SonarCloud est√© disponible..."
          MAX_RETRIES=10
          RETRY_DELAY=10
          COUNTER=0
          STATUS="NONE"

          while [ "$COUNTER" -lt "$MAX_RETRIES" ]; do
            RESPONSE=$(curl -s -u "${SONAR_TOKEN}:" "${SONAR_URL}")
            STATUS=$(echo "${RESPONSE}" | jq -r '.projectStatus.status')

            if [ "$STATUS" != "null" ] && [ "$STATUS" != "NONE" ]; then
              echo "üîç Estado del an√°lisis recibido: $STATUS"
              break
            fi

            echo "‚è≥ A√∫n no disponible... Reintentando ($((COUNTER+1))/$MAX_RETRIES)"
            sleep "$RETRY_DELAY"
            ((COUNTER++))
          done

          if [ "$STATUS" == "OK" ]; then
            echo "‚úÖ El an√°lisis de SonarCloud ha pasado correctamente."
          else
            echo "‚ùå El an√°lisis de SonarCloud ha fallado o no se pudo recuperar el estado."
            echo "Detalles del fallo:"
            echo "${RESPONSE}" | jq '.projectStatus.conditions'
            exit 1
          fi
      
      
